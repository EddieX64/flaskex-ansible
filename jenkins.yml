---
    - hosts: jenkins_master
      become: yes
      vars_files:
        - /workdir/flaskex-ansible/vars/main.yml
    
      tasks:
      - name: Download Jenkins release
        get_url:
          url: "{{ jenkins_repo }}"
          dest: /etc/yum.repos.d/jenkins.repo
      - name: Import jenkins key from url
        ansible.builtin.rpm_key:
          state: present
          key: "{{ jenkins_key }}"
      - name: Yum update
        yum:
          name: '*'
          state: latest
      - name: Install packages
        yum:
          name: "{{ jenkins_master_requirements }}"
          state: present
      - name: Install jenkins
        yum:
          name: jenkins
          state: latest
      - name: Enable jenkins
        service:
          name: jenkins
          enabled: yes
      - name: Start jenkins
        service:
          name: jenkins
          state: started
    
    - hosts: jenkins_slave
      become: yes
      vars_files:
        - /workdir/flaskex-ansible/vars/main.yml
    
      tasks:
      - name: Yum update
        yum:
          name: '*'
          state: latest
      - name: Install packages
        yum:
          name: "{{ jenkins_slave_requirements }}"
          state: present
      - name: Download and unzip aws cli
        unarchive: 
          src: "{{ aws_cli_source }}"
          dest: /tmp
          remote_src: yes
          creates: "{{ aws_cli_tmp }}"
        register: aws_cli_installer
      - name: Install aws cli
        shell: sudo "{{ aws_cli_tmp }}"/install -i /usr/local/aws -b "{{ aws_cli_path }}" 
        args:
          creates: "{{ aws_cli_path }}" 
        when: aws_cli_installer.changed
      - name: check if terraform already installed
        stat:
          path: "{{ terraform_path }}"
        register: terraform_exists
      - name: install terraform
        unarchive:
          src: "{{ terraform_version }}"
          dest: /usr/bin
          remote_src: yes
        when: terraform_exists.stat.exists == False
      - name: Create flaskex directory if it does not exist
        file:
          path: "{{ flaskex_dir }}"
          state: directory
          owner: ec2-user
          group: ec2-user
          mode: '0774'
      - name: Create flaskex service
        template:
          src: /workdir/flaskex-ansible/templates/flaskex.service
          dest: "{{ flaskex_service_path }}"
          owner: root
          group: root
          mode: '0644'
